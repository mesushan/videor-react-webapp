{"version":3,"sources":["services/logService.js","services/httpService.js","services/authService.js","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","components/moviesTable.jsx","components/common/listGroup.jsx","components/common/pagination.jsx","services/movieService.js","services/genreService.js","components/searchBox.jsx","components/movies.jsx","utils/paginate.js","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/common/protectedRoute.jsx","components/logout.jsx","App.js","serviceWorker.js","index.js"],"names":["logService","init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","httpService","get","post","put","delete","setJwt","jwt","headers","common","apiEndPoint","tokenKey","_callee","email","password","_ref","regenerator_default","a","wrap","_context","prev","next","http","sent","data","localStorage","setItem","stop","getJwt","getItem","authService","login","_x","_x2","_login","apply","this","arguments","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","TableHeader","raiseSort","path","sortColumn","Object","objectSpread","_this","props","order","onSort","renderSortIcon","column","react_default","createElement","className","_this2","columns","map","key","onClick","label","Component","TableBody","renderCell","item","content","_","createKey","_id","_this$props","Table","tableHeader","tableBody","Like","classes","liked","style","cursor","aria-hidden","MoviesTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","movie","Link","to","concat","title","like","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","table","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","movieUrl","id","getMovie","movieId","saveMovie","body","getGenres","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","movieID","t0","handleLike","toConsumableArray","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","_this$state","allMovies","filtered","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","_this$state2","_this$getPagedData","listGroup","marginBottom","searchBox","moviesTable","pagination","Input","rest","objectWithoutProperties","htmlFor","assign","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","details","Symbol","iterator","done","message","err","return","validateProperty","obj","defineProperty","handleSubmit","preventDefault","doSubmit","handleChange","_ref2","input","errorMessage","disabled","common_select","common_input","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","match","params","mapToViewModel","_context3","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","Customers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","Fragment","LoginForm","username","location","window","from","pathname","Redirect","RegisterForm","ProtectedRoute","component","render","Route","Logout","App","lib","navBar","Switch","protectedRoute","components_movies","exact","Boolean","hostname","REACT_APP_NAME","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62b1f37d.chunk.js","sourcesContent":["function init() {}\n\nfunction log(error) {\n  console.error(error);\n}\n\nexport default {\n  init,\n  log\n};\n","import axios from 'axios';\nimport logger from './logService';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error('An unexpected error occurred.');\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common['x-auth-token'] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt\n};\n","import jwtDecode from 'jwt-decode';\nimport http from './httpService';\n\nconst apiEndPoint = '/auth';\nconst tokenKey = 'token';\n\nhttp.setJwt(getJwt());\n\nexport async function login(email, password) {\n  const { data: jwt } = await http.post(apiEndPoint, { email, password });\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\nexport default {\n  login,\n  loginWithJwt,\n  logout,\n  getCurrentUser,\n  getJwt\n};\n","import React, { Component } from 'react';\n\n//columns: array\n//sortColumn: object\n//unSort: function\n\nclass TableHeader extends Component {\n  raiseSort = path => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === 'asc' ? 'desc' : 'asc';\n    else {\n      sortColumn.path = path;\n      sortColumn.order = 'asc';\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  renderSortIcon = column => {\n    const { sortColumn } = this.props;\n    if (column.path !== this.props.sortColumn.path) return null;\n    if (sortColumn.order === 'asc') return <i className='fa fa-sort-asc' />;\n    return <i className='fa fa-sort-desc' />;\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map(column => (\n            <th\n              className='clickable'\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label} {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport _ from 'lodash';\n\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n  render() {\n    const { data, columns } = this.props;\n    return (\n      <tbody>\n        {data.map(item => (\n          <tr key={item._id}>\n            {columns.map(column => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React from 'react';\nimport TableHeader from './tableHeader';\nimport TableBody from './tableBody';\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className='table'>\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n    </table>\n  );\n};\n\nexport default Table;\n","import React from 'react';\n// Input: liked: boolean\n// Output : onClick\n//Stateless Functional Component\nconst Like = props => {\n  let classes = 'fa fa-heart';\n  if (!props.liked) classes += '-o';\n  return (\n    <i\n      onClick={props.onClick}\n      style={{ cursor: 'pointer' }}\n      className={classes}\n      aria-hidden='true'\n    />\n  );\n};\n\nexport default Like;\n","import React, { Component } from 'react';\nimport auth from '../services/authService';\nimport { Link } from 'react-router-dom';\nimport Table from './common/table';\nimport Like from './common/like';\n\nclass MoviesTable extends Component {\n  columns = [\n    {\n      path: 'title',\n      label: 'Title',\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n    },\n    { path: 'genre.name', label: 'Genre' },\n    { path: 'numberInStock', label: 'Stock' },\n    { path: 'dailyRentalRate', label: 'Rate' },\n    {\n      key: 'like',\n      content: movie => (\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\n      )\n    }\n  ];\n\n  deleteColumn = {\n    key: 'delete',\n    content: movie => (\n      <button\n        onClick={() => this.props.onDelete(movie)}\n        className='btn btn-danger btn-sm'\n      >\n        Delete\n      </button>\n    )\n  };\n\n  constructor() {\n    super();\n    const user = auth.getCurrentUser();\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\n  }\n\n  render() {\n    const { movies, onSort, sortColumn } = this.props;\n    return (\n      <Table\n        columns={this.columns}\n        data={movies}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      />\n    );\n  }\n}\n\nexport default MoviesTable;\n","import React from 'react';\n\nconst ListGroup = props => {\n  const {\n    items,\n    textProperty,\n    valueProperty,\n    selectedItem,\n    onItemSelect\n  } = props;\n  return (\n    <ul className='list-group'>\n      {items.map(item => (\n        <li\n          onClick={() => onItemSelect(item)}\n          key={item[valueProperty]}\n          className={\n            item === selectedItem ? 'list-group-item active' : 'list-group-item'\n          }\n        >\n          {item[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListGroup.defaultProps = {\n  textProperty: 'name',\n  valueProperty: '_id'\n};\n\nexport default ListGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nconst Pagination = props => {\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  //console.log(pagesCount);\n\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <nav>\n      <ul className='pagination'>\n        {pages.map(page => (\n          <li\n            key={page}\n            className={page === currentPage ? 'page-item active' : 'page-item'}\n          >\n            <button className='page-link' onClick={() => onPageChange(page)}>\n              {page}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n//PropTypes\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import http from './httpService';\n\nconst apiEndPoint = '/movies';\n\nfunction movieUrl(id) {\n  return `${apiEndPoint}/${id}`;\n}\n\nexport function getMovies() {\n  return http.get(apiEndPoint);\n}\n\nexport function getMovie(movieId) {\n  return http.get(movieUrl(movieId));\n}\n\nexport function saveMovie(movie) {\n  if (movie._id) {\n    const body = { ...movie };\n    delete body._id;\n    return http.put(movieUrl(movie._id), body);\n  }\n  return http.post(apiEndPoint, movie);\n}\n\nexport function deleteMovie(movieID) {\n  return http.delete(movieUrl(movieID));\n}\n","import http from './httpService';\nexport function getGenres() {\n  return http.get('/genres');\n}\n","import React from 'react';\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type='text'\n      name='query'\n      className='form-control my-3'\n      placeholder='Search...'\n      value={value}\n      onChange={e => onChange(e.currentTarget.value)}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport MoviesTable from './moviesTable';\nimport ListGroup from './common/listGroup';\nimport Pagination from './common/pagination';\nimport { getMovies, deleteMovie } from '../services/movieService';\nimport { getGenres } from '../services/genreService';\nimport { paginate } from '../utils/paginate';\nimport _ from 'lodash';\nimport SearchBox from './searchBox';\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: '',\n    selectedGenre: null,\n    sortColumn: { path: 'title', order: 'asc' }\n  };\n\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const genres = [{ _id: '', name: 'All Genres' }, ...data];\n\n    const { data: movies } = await getMovies();\n    this.setState({ movies, genres });\n  }\n\n  handleDelete = async movie => {\n    const originalMovies = this.state.movies;\n    const movies = originalMovies.filter(m => m._id !== movie._id);\n    this.setState({ movies });\n\n    try {\n      await deleteMovie(movie._id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        toast.error('This movie has already been deleted.');\n    }\n  };\n\n  handleLike = movie => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = genre => {\n    this.setState({ selectedGenre: genre, searchQuery: '', currentPage: 1 });\n  };\n\n  handleSearch = query => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  handleSort = sortColumn => {\n    this.setState({ sortColumn });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedGenre,\n      searchQuery,\n      movies: allMovies\n    } = this.state;\n\n    let filtered = allMovies;\n    if (searchQuery)\n      filtered = allMovies.filter(m =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\n    const { user } = this.props;\n\n    const { totalCount, data: movies } = this.getPagedData();\n\n    return (\n      <div className='row'>\n        <div className='col-3'>\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className='col'>\n          {user && (\n            <Link\n              to='/movies/new'\n              className='btn btn-primary'\n              style={{ marginBottom: 20 }}\n            >\n              New Movie\n            </Link>\n          )}\n          <p>Showing {totalCount} movies in the database.</p>\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import _ from 'lodash';\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items)\n    .slice(startIndex)\n    .take(pageSize)\n    .value();\n  //_.slice(items, startIndex)\n  //_.take()\n}\n","import React from 'react';\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className='form-group'>\n      <label htmlFor={name}>{label}</label>\n      <input {...rest} id={name} name={name} className='form-control' />\n      {error && <div className='alert alert-danger'>{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\n\nconst Select = ({ name, label, options, error, ...rest }) => {\n  return (\n    <div className='form-group'>\n      <label htmlFor={name}>{label}</label>\n      <select name={name} id={name} {...rest} className='form-control'>\n        <option value='' />\n        {options.map(option => (\n          <option key={option._id} value={option._id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      {error && <div className='alert alert-danger'>{error}</div>}\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { Component } from 'react';\nimport Joi from 'joi-browser';\nimport Input from './input';\nimport Select from './select';\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {}\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value }; //using computed properties\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  //prevent full page reload after clicking login button\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  };\n\n  renderButton(label) {\n    return (\n      <button disabled={this.validate()} className='btn btn-primary'>\n        {label}\n      </button>\n    );\n  }\n\n  renderSelect(name, label, options) {\n    const { data, errors } = this.state;\n\n    return (\n      <Select\n        name={name}\n        value={data[name]}\n        label={label}\n        options={options}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n\n  renderInput(name, label, type = 'text') {\n    const { data, errors } = this.state;\n\n    return (\n      <Input\n        type={type}\n        name={name}\n        value={data[name]}\n        label={label}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport Joi from 'joi-browser';\nimport Form from './common/form';\nimport { getMovie, saveMovie } from '../services/movieService';\nimport { getGenres } from '../services/genreService';\n\nclass MovieForm extends Form {\n  state = {\n    data: {\n      title: '',\n      genreId: '',\n      numberInStock: '',\n      dailyRentalRate: ''\n    },\n    genres: [],\n    errors: {}\n  };\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string()\n      .required()\n      .label('Title'),\n    genreId: Joi.string()\n      .required()\n      .label('Genre'),\n    numberInStock: Joi.number()\n      .required()\n      .min(0)\n      .max(100)\n      .label('Number in Stock'),\n    dailyRentalRate: Joi.number()\n      .required()\n      .min(0)\n      .max(10)\n      .label('Daily Rental Rate')\n  };\n\n  async populateGenres() {\n    const { data: genres } = await getGenres();\n    this.setState({ genres });\n  }\n\n  async populateMovie() {\n    try {\n      const movieId = this.props.match.params.id;\n      if (movieId === 'new') return;\n\n      const { data: movie } = await getMovie(movieId);\n      this.setState({ data: this.mapToViewModel(movie) });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        this.props.history.replace('/not-found');\n    }\n  }\n\n  async componentDidMount() {\n    await this.populateGenres();\n    await this.populateMovie();\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate\n    };\n  }\n\n  doSubmit = async () => {\n    await saveMovie(this.state.data);\n\n    this.props.history.push('/movies');\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Movie Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput('title', 'Title')}\n          {this.renderSelect('genreId', 'Genre', this.state.genres)}\n          {this.renderInput('numberInStock', 'Number in Stock', 'number')}\n          {this.renderInput('dailyRentalRate', 'Rate')}\n          {this.renderButton('Save')}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n","import React from 'react';\n\nconst Customers = () => {\n  return <h1>Customers</h1>;\n};\n\nexport default Customers;\n","import React from 'react';\nconst Rentals = () => {\n  return <h1>Rentals</h1>;\n};\n\nexport default Rentals;\n","import React from 'react';\nconst NotFound = () => {\n  return <h1>NotFound</h1>;\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\nconst NavBar = ({ user }) => {\n  return (\n    <nav className='navbar navbar-expand-lg navbar-light bg-light'>\n      <Link className='navbar-brand' to='/'>\n        Video Rental\n      </Link>\n      <button\n        className='navbar-toggler'\n        type='button'\n        data-toggle='collapse'\n        data-target='#navbarNav'\n        aria-controls='navbarNav'\n        aria-expanded='false'\n        aria-label='Toggle navigation'\n      >\n        <span className='navbar-toggler-icon' />\n      </button>\n      <div className='collapse navbar-collapse' id='navbarNav'>\n        <div className='navbar-nav'>\n          <NavLink className='nav-item nav-link' to='/movies'>\n            Movies <span className='sr-only'>(current)</span>\n          </NavLink>\n          <NavLink className='nav-item nav-link' to='/customers'>\n            Customers\n          </NavLink>\n          <NavLink className='nav-item nav-link' to='/rentals'>\n            Rentals\n          </NavLink>\n          {!user && (\n            <React.Fragment>\n              <NavLink className='nav-item nav-link' to='/login'>\n                Login\n              </NavLink>\n              <NavLink className='nav-item nav-link' to='/register'>\n                Register\n              </NavLink>\n            </React.Fragment>\n          )}\n          {user && (\n            <React.Fragment>\n              <NavLink className='nav-item nav-link' to='/profile'>\n                {user.name}\n              </NavLink>\n              <NavLink className='nav-item nav-link' to='/logout'>\n                Logout\n              </NavLink>\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Joi from 'joi-browser';\nimport Form from './common/form';\nimport auth from '../services/authService';\nclass LoginForm extends Form {\n  state = {\n    data: { username: '', password: '' },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .label('Username'),\n    password: Joi.string()\n      .required()\n      .label('Password')\n  };\n\n  doSubmit = async () => {\n    try {\n      const { data } = this.state;\n      await auth.login(data.username, data.password);\n      const { state } = this.props.location;\n      window.location = state ? state.from.pathname : '/';\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    if (auth.getCurrentUser()) return <Redirect to='/' />;\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput('username', 'Username')}\n          {this.renderInput('password', 'Password', 'password')}\n          {this.renderButton('Login')}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import http from './httpService';\n\nconst apiEndPoint = '/users';\n\nexport function register(user) {\n  return http.post(apiEndPoint, {\n    email: user.username,\n    password: user.password,\n    name: user.name\n  });\n}\n","import React from 'react';\nimport Joi from 'joi-browser';\nimport Form from './common/form';\nimport * as userService from '../services/userService';\nimport auth from '../services/authService';\n\nclass RegisterForm extends Form {\n  state = {\n    data: { username: '', password: '', name: '' },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .email()\n      .label('Username'),\n    password: Joi.string()\n      .required()\n      .min(5)\n      .label('Password'),\n    name: Joi.string()\n      .required()\n      .label('Name')\n  };\n\n  doSubmit = async () => {\n    try {\n      const response = await userService.register(this.state.data);\n      auth.loginWithJwt(response.headers['x-auth-token']);\n      window.location = '/';\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput('username', 'Username')}\n          {this.renderInput('password', 'Password', 'password')}\n          {this.renderInput('name', 'Name')}\n          {this.renderButton('Register')}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport auth from '../../services/authService';\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (!auth.getCurrentUser())\n          return (\n            <Redirect\n              to={{\n                pathname: '/login',\n                state: { from: props.location }\n              }}\n            />\n          );\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import { Component } from 'react';\nimport auth from '../services/authService';\n\nclass Logout extends Component {\n  componentDidMount() {\n    auth.logout();\n    window.location = '/';\n  }\n  render() {\n    return null;\n  }\n}\n\nexport default Logout;\n","import React, { Component } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport Movies from './components/movies';\nimport MovieForm from './components/movieForm';\nimport Customers from './components/customers';\nimport Rentals from './components/rentals';\nimport NotFound from './components/notFound';\nimport NavBar from './components/navBar';\nimport LoginForm from './components/loginForm';\nimport RegisterForm from './components/registerForm';\nimport ProtectedRoute from './components/common/protectedRoute';\nimport Logout from './components/logout';\nimport auth from './services/authService';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user} />\n        <main className='container'>\n          <Switch>\n            <Route path='/register' component={RegisterForm} />\n            <Route path='/login' component={LoginForm} />\n            <Route path='/logout' component={Logout} />\n            <ProtectedRoute path='/movies/:id' component={MovieForm} />\n            <Route\n              path='/movies'\n              render={props => <Movies {...props} user={this.state.user} />}\n            />\n            <Route path='/customers' component={Customers} />\n            <Route path='/rentals' component={Rentals} />\n            <Route path='/not-found' component={NotFound} />\n            <Redirect from='/' exact to='/movies' />\n            <Redirect to='/not-found' />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nconsole.log('SUPERMAN', process.env.REACT_APP_NAME);\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}